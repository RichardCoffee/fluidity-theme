
			Initialize
	==================================
		fluid_browser_title( $title )
		fluidity_class_loader( $class )
		fluidity_register_bootstrap()
		fluidity_register_fontawesome()
		fluidity_register_sidebars()
		tcc_register_galleryview()
		tcc_enqueue_galleryview( $query )
		tcc_register_nav_menu()

			Classes
	==================================
		TCC_Theme_ClearFix( array( 'lg'=>4, 'md'=>4, 'sm'=>6, 'xs'=>12 ) )
		TCC_Theme_Navigation( array( 'taxonomy'=>'', 'all_links'=>false ) )

			Footer
	==================================
		fluid_copyright_dates()
		fluid_footer_autohide()
		tcc_copyright( $banner = true )

			General
	==================================
		array_insert_after( $array, $key, $new_key, $new_value )
		container_type( $location = 'post' )
		convert_user_meta( $ID )
		esc_attr_ex( $text, $context, $domain = 'default' )
		esc_html_ex( $text, $context, $domain = 'default' )
		get_term_name( $tax, $slug )
		get_valid_gravatar( $email, $size = 96 )
		is_ajax()
		page_exists( $search='' )
		sanitize_array( $array, $method = 'title' )
		tcc_bootstrap_css( $args )
		tcc_browser_body_class( $classes )
		wp_menu_id_by_name( $name )

			Header
	==================================
		fluidity_social_icons()
		tcc_custom_css()

			Pages
	==================================
		author_role_template( $templates = '' )
		fluid_content_slug( $page = 'single' )
		fluid_noposts_page( $text )
		fluid_read_more_link( $output )
		fluid_save_page_template( $template )
		get_page_slug()
		tcc_get_page_id_by_slug( $slug, $prop='ID' )
		tcc_get_page_title( $page_slug )
		tcc_page_title( $page_slug )
		tcc_page_parallax( $div = true )

			Posts
	==================================
		fluid_comment_navigation()
		fluid_get_post_terms( $post_id, $taxonomy, $args )
		fluid_edit_post_link()
		fluid_list_comments( $comment, $args, $depth )
		fluid_next_post_exists()
		fluid_post_date( $complete = false )
		fluid_post_separator( $slug )
		fluid_postmetadata()
		fluid_thumbnail()
		fluid_title( $length = 0 )
		fluid_user_profile_link()
		get_featured_url( $postID = null )
		get_the_author_posts_link( $authorID = 0 )
		tcc_excerpt_parallax()
		tcc_post_parallax( $css = 'single-parallax' )
		tcc_post_title( $max = 0, $anchor = true )

			Settings
	==================================
		tcc_currency_symbol()
		tcc_design( $option )
		tcc_font_size()
		tcc_layout( $option )
		tcc_option( $option = '', $section = '' )
		tcc_settings( $option )

			Third Party
	==================================
		fluidity_jetpack_site_logo_to_bootstrap( $html )
		fluidity_wpfai_social()
		has_woocommerce()
		woocommerce_and_jetpack_sharedaddy()

			Widgets
	==================================
		fluidity_the_widget( $widget, $instance, $args )
		tcc_register_widgets()

			Debugging
	==================================
		debug_calling_function( $depth = 1 )
		debug_rewrite_rules()
		list_filter_hooks( $hook = '' )
		list_template_conditions()
		log_entry()
		showme( $title, $data )
		tellme( $string )
		who_am_i( $pos=0 )

contextual_static_front_page_section( $wp_customize )
single_search_result()
fluidity_menubar_print_button()
fluid_color_body_class( $classes )
fluid_color_scheme()
tcc_color_scheme( $location = '' )
tcc_custom_colors()
tcc_parallax()
tcc_editor_styles()
tcc_post_revisions()
tcc_enqueue()
fluidity_admin_enqueue()
fluidity_bootstrap_backup()
fluidity_register_color_scheme()
fluidity_show_query( $args, $template, $slug='' )

			Microdata
	==================================
		microdata()
classes/microdata.php:76:  public function microdata($type) {
classes/microdata.php:81:  public function about()    { $this->AboutPage(); }              // CreativeWork > WebPage > AboutPage
classes/microdata.php:82:  public function address()  { $this->PostalAddress(); }          // descendant of many types - see itemtype link
classes/microdata.php:83:  public function agent()    { $this->RealEstateAgent(); }        // Organization|Place > LocalBusiness > RealEstateAgent
classes/microdata.php:84:  public function company()  { $this->Organization(); }           // first tier type
classes/microdata.php:85:  public function contact()  { $this->ContactPage(); }            // CreativeWork > WebPage > ContactPage
classes/microdata.php:86:  public function element()  { $this->WebPageElement(); }         // CreativeWork > WebPage > WebPageElement
classes/microdata.php:87:  public function footer()   { $this->WPFooter(); }               // CreativeWork > WebPage > WebPageElement > WPFooter
classes/microdata.php:88:  public function group()    { $this->Organization(); }           // first tier type
classes/microdata.php:89:  public function header()   { $this->WPHeader(); }               // CreativeWork > WebPage > WebPageElement > WPHeader
classes/microdata.php:90:  public function item()     { $this->ItemPage(); }               // CreativeWork > WebPage > ItemPage
classes/microdata.php:91:  public function navigate() { $this->SiteNavigationElement(); }  // CreativeWork > WebPage > WebPageElement > SiteNavigationElement
classes/microdata.php:92:  public function page()     { $this->WebPage(); }                // CreativeWork > WebPage
classes/microdata.php:93:  public function post()     { $this->BlogPosting(); }            // CreativeWork > Blog > BlogPosting
classes/microdata.php:94:  public function profile()  { $this->ProfilePage(); }            // CreativeWork > WebPage > ProfilePage
classes/microdata.php:95:  public function search()   { $this->SearchResultsPage(); }      // CreativeWork > WebPage > SearchResultsPage
classes/microdata.php:96:  public function sidebar()  { $this->WPSideBar(); }              // CreativeWork > WebPage > WebPageElement > WPSideBar
classes/microdata.php:98:  public function BlogPosting() { // CreativeWork > Blog > BlogPosting
classes/microdata.php:283:  public function wp_get_attachment_link($link) {
classes/microdata.php:291:  public function description($text) {
classes/microdata.php:296:  public function email_format($email) {
classes/microdata.php:301:  public function image_html($image) {
classes/microdata.php:305:  public function name($name) {
classes/microdata.php:310:  public function telephone($phone) {
classes/microdata.php:315:  public function url_format($url) {
classes/microdata.php:323:  public function city($city) {
classes/microdata.php:328:  public function pobox($pobox) {
classes/microdata.php:333:  public function state($state) {
classes/microdata.php:338:  public function street($street) {
classes/microdata.php:343:  public function zipcode($zipcode) {
