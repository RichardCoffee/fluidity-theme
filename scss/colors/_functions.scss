
$input-color-placeholder: #999;

/* functions */

@function color($key) {
  @if not map-has-key($colors, $key) {
    @warn "Key `#{$key}` not found.";
  }
  @return map-get($colors, $key);
}

@function darkest( $color1, $color2 ) {
	$comp1: lightness( $color1 );
	$comp2: lightness( $color2 );
	@if ( $comp1 > $comp2 ) {
		@return $color2;
	}
	@return $color1;
}

@function lightest( $color1, $color2 ) {
	$comp1: lightness( $color1 );
	$comp2: lightness( $color2 );
	@if ( $comp1 < $comp2 ) {
		@return $color2;
	}
	@return $color1;
}

// http://thesassway.com/intermediate/dynamically-change-text-color-based-on-its-background-with-sass
@function set-color-contrast($colorbase, $colorlite, $colordark) {
  @if (lightness($colorbase) > 50) {
    @return $colordark; // Lighter backgorund, return dark color
  } @else {
    @return $colorlite; // Darker background, return light color
  }
}


/* mixins */

@mixin background-opacity($color, $opacity: 0.3) {
    background: $color; /* The Fallback */
    background: rgba($color, $opacity);
}

//  bootstrap/mixins/_vendor-prefixes.scss
@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
          box-shadow: $shadow;
}

@mixin placeholder($color: $input-color-placeholder ) {
	// Firefox 19+
	&::-moz-placeholder {
		color: $color;
		opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
	}
	&:-moz-placeholder { color: $color; } // Firefox 18-
	&:-ms-input-placeholder { color: $color; } // Internet Explorer 10+
	&::-webkit-input-placeholder  { color: $color; } // Safari / Chrome / Opera
}
